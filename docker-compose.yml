version: '2.1'

services:
  eureka-server:
    image: taskbeez/eureka-server:master
    expose:
      - "8761"
    environment:
      server.port: 8761
      eureka.instance.hostname: eureka-server
      eureka.client.registerWithEureka: 'false'
      eureka.client.fetchRegistry: 'false'
      eureka.client.serviceUrl.defaultZone: http://eureka-server:8761/eureka
    healthcheck:
      test: ["CMD-SHELL", "grep 'Started Application in' -c /opt/logs/eureka-server.log || exit 1"]
      interval: 1s
      timeout: 10s
      retries: 60
    labels:
      - "ru.grachevko.dhu=eureka-server"

  twitter-consumer:
    build: twitter-consumer
    image: twitter-consumer
    ports:
      - "8081:8081"
    depends_on:
      eureka-server:
        condition: service_healthy
    environment:
      server.port: 8081
      eureka.client.enabled: 'true'
      eureka.host: eureka-server
      eureka.instance.preferIpAddress: 'true'
    labels:
      - "ru.grachevko.dhu=twitter-consumer"

  githubconsumer:
    build: githubconsumer
    image: githubconsumer
    ports:
      - "8082:8082"
    depends_on:
      eureka-server:
        condition: service_healthy
    environment:
      server.port: 8082
      eureka.client.enabled: 'true'
      eureka.host: eureka-server
      eureka.instance.preferIpAddress: 'true'
      github.personal.token: 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
    labels:
      - "ru.grachevko.dhu=githubconsumer"

  totalizer:
    build: totalizer
    image: totalizer
    ports:
      - "8083:8083"
    depends_on:
      twitter-consumer:
        condition: service_started
      githubconsumer:
        condition: service_started
    environment:
      server.port: 8083
      eureka.client.enabled: 'true'
      eureka.host: eureka-server
      eureka.instance.preferIpAddress: 'true'
    labels:
      - "ru.grachevko.dhu=totalizer"

  docker-hosts-updater:
    container_name: microservices-docker-hosts-updater
    hostname: microservices-docker-hosts-updater
    image: grachev/docker-hosts-updater
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/hosts:/opt/hosts

networks:
  emp-network:
    driver: bridge